[build-system]
requires = [
    "hatchling",
    "hatch-jupyter-builder",
    "jupyterlab>=4,<5",
]
build-backend="hatchling.build"

[project]
name = "python-template-jupyter"
authors = [{name = "Python Project Template Authors", email = "3105306+timkpaine@users.noreply.github.com"}]
description="A Jupyter-Python project template"
readme = "README.md"
license = { text = "Apache-2.0" }
version = "0.1.0"
requires-python = ">=3.9"
keywords = []

classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = []

[project.urls]
Repository = "https://github.com/python-project-templates/python-template-jupyter"
Homepage = "https://github.com/python-project-templates/python-template-jupyter"

[project.optional-dependencies]
develop = [
    "build",
    "bump-my-version",
    "check-manifest",
    "hatch-jupyter-builder",
    "hatchling",
    "jupyterlab>=4,<5",
    "pytest",
    "pytest-cov",
    "ruff",
    "twine",
    "wheel",
]

[project.scripts]

[tool.bumpversion]
current_version = "0.1.0"
commit = true
tag = true

[[tool.bumpversion.files]]
filename = "python_template_jupyter/__init__.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "js/package.json"
search = '"version": "{current_version}"'
replace = '"version": "{new_version}"'

[tool.check-manifest]
ignore = [
    ".copier-answers.yml",
    "js/pnpm-lock.yaml",
    "Makefile",
    "setup.py",
    "python_template_jupyter/labextension/**",
    "python_template_jupyter/nbextension/**",
    "docs/**/*",
]

[tool.coverage.run]
branch = true
omit = [
    "python_template_jupyter/tests/integration/",
]
[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
fail_under = 50

[tool.hatch.build]
artifacts = [
    "python_template_jupyter/nbextension",
    "python_template_jupyter/labextension",
]

[tool.hatch.build.sources]
src = "/"

[tool.hatch.build.targets.sdist]
packages = ["python_template_jupyter", "js"]
exclude = [
    "/js/dist",
    "/js/node_modules",
]

[tool.hatch.build.targets.wheel]
packages = ["python_template_jupyter"]

[tool.hatch.build.targets.wheel.shared-data]
"python_template_jupyter/labextension" = "share/jupyter/labextensions/python_template_jupyter"

[tool.hatch.build.hooks.jupyter-builder]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "python_template_jupyter/labextension/package.json",
]
skip-if-exists = [
    "python_template_jupyter/labextension/package.json",
]
dependencies = [
    "hatch-jupyter-builder",
]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
path = "js"
build_cmd = "build"
npm = "pnpm"

[tool.pytest.ini_options]
addopts = ["-vvv", "--junitxml=junit.xml"]
asyncio_mode = "strict"
testpaths = "python_template_jupyter/tests"

[tool.ruff]
line-length = 150

[tool.ruff.lint]
extend-select = ["I"]

[tool.ruff.lint.isort]
combine-as-imports = true
default-section = "third-party"
known-first-party = ["python_template_jupyter"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
